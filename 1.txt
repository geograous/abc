昨天 （周四）
1.  封装小程序播放和推流组件
今天（周五）
1.  编写小程序组件测试项目

播放器状态改变
event_id: 32
event_name: "WechatPlayerStatus"
status_code: 2002

播放器网络状态统计信息
event_id: 33
event_name: "WechatPlayerStatistics"
video_bitrate: 0
audio_bitrate: 0
video_fps: 0
video_gop: 0
net_speed: 0
net_jitter: 0
video_width: 0
video_height: 0

推流器状态改变
event_id: 34
event_name: "WechatPusherStatus"
status_code: 1002

推流器网络状态统计信息
event_id: 35
event_name: "WechatPusherStatistics"
video_bitrate: 0
audio_bitrate: 0
video_fps: 0
video_gop: 0
net_speed: 0
net_jitter: 0
video_width: 0
video_height: 0

昨天 （周三）
1.  验证小程序组件的重连和打点
今天（周四）
1.  修复h5牛会议 断网重连bug


实现一个函数 var urlObject = parseUrl(url)，将一段 url 字符串解析为 Object

  例如：

```js
var url = 'https://www.qiniu.com/products/qcdn?entry=index&ts=1585703058520#feature';
var urlObject = parseUrl(url);
console.log(urlObject);
```

输出结果为：

```js
{
  protocol: "https",
  host: "www.qiniu.com",
  path: "/products/qcdn",
  params: {
    entry: "index",
    ts: "1585703058520"
  },
  hash: "feature"
}
```

### 数组去重

```js
function dedupe(arr) {
  // ...
}

dedupe([1, 3, 2, 1, 2]) // [1, 3, 2]
// 1. === 则认为重复 2. 保持原数组顺序
// 考虑字符串？
// 考虑复杂结构？
// 不使用 Set/Map？ Or 考虑怎么去 polyfill Set/Map
```

### 移除元素

```js
var remove = function(vals, val) {

}

const arr = [1, 2, 3, 2, 2]
const len = remove(arr, 2)
for (let i = 0; i < len; i++) {
  console.log(arr[i])
}
// 1, 3
```

小程序
react
vue
mse

js 语言
nodejs 
小程序框架
vue 的使用心得
react
typescript

js模块化规范
浏览器微任务、宏任务

移动端适配flexbox，文字展示
移动端 css 
hash history
window.location

vue-router

现状：
老官网使用 ruby 技术栈，其中前端部分使用 ruby on rails。后端部分使用 ruby 接口，部分数据来自 CMS 系统。

存在的不足：
1.通过 ruby 进行渲染，技术栈和 portal 项目有较大差异，不好维护。

解决方法：
1.使用团队熟悉的 react 框架
2.使用 JAMStack 技术栈

JAMStack 简介 https://jamstack.org/ 。
优势：高性能、易扩展、高安全性、友好的开发体验

使用框架：next.js
主流的框架有 next.js 和 gatsby.js 。gatsby.js 官网中有两者的对比 https://www.gatsbyjs.org/features/jamstack/。
但是 gatsby.js 框架的特点是大而全，使用起来也比较繁琐。next.js 的开发体验相对而言简单一些，而且成名较早，有更多的成功案例。

开发部署流程：
1.本地开发完页面
2.进行代码格式校验、单元测试
3.校验完成后上传代码到 bucket，刷新 CDN

新老官网内容的隔离：
1.老官网的接口也页面域名设置为 legacy-www.qiniu.com
2.调用老接口通过 proxy 来实现
3.访问老官网中特有的页面通过在 bucket 中设置镜像回源，源站的地址为 legacy-www.qiniu.com

针对 CMS 系统动态生成的内容：
一期暂时不做。以后的方案可以尝试定期爬取 CMS 的页面，后者爬取数据用定制的模版渲染生成新的页面，部署到 bucket 中。

后端接口：复用活动页的 proxy 代理到 mars、sso、gaea 等服务

全文检索：使用自己开发的 es 服务

为什么不用第三方方案：第三方服务收钱、有很多限制，不如自研稳定

ssh zhuhao@10.20.34.27

qssh vdn-gddg-dls-1-5

docker login reg.qiniu.com -u pili-coresdk@qiniu.com -p Pili@2016

/Users/zhuhao/projects/qiniu/rtndoc/rtn/website/build/QNRTC
scp -r /Users/zhuhao/projects/qiniu/rtndoc/rtn/website/build/QNRTC zhuhao@10.20.34.27:/home/zhuhao/build
scp -r /Users/zhuhao/tmp/QNRTC-Linux zhuhao@10.20.34.27:/home/zhuhao/build/QNRTC-Linux
/Users/zhuhao/tmp/QNRTC-Windows
qscp -r /home/zhuhao/build/QNRTC-Linux vdn-gddg-dls-1-5:/home/hermes/sdkdoc/env_prod/QNRTC-Linux

/home/hermes/sdkdoc/env_prod

function test() {
  try {
    console.log('try')
    try {
      console.log('try try')
    } finally {
      console.log('try finally')
    }
    return 'ccc'
  } finally {
    console.log('finally')
  }
}

HTML/CSS
* css盒模型，flex box
* css优先级
* css命名空间污染、CSS Module
* 页面渲染基本过程
* 事件模型

JS/TS
* 基础语法
* this指针
* 深拷贝
* JS异步与事件循环
* JS垃圾回收机制
* ES6+语法：let，const，async…await，class，箭头函数，…

框架
* React: 生命周期，HOC，PureComponent与Component，Diff，React 16+新特性
* Angular: 生命周期，脏检测
* Vue: 生命周期

状态管理
* Redux：数据流向与工作流程，如何处理异步状态变更，thunk、saga相关
* Mobx：数据流向与工作流程，理解reaction

前端工程化
* npm包管理
* Webpack：code split，dynamic import
* git使用
* 死锁，中断

浏览器
*跨域
*存储，cookies, localStorage, sessionStorage
*同源限制
*浏览器API
*调试工具

其它Web知识
* 性能优化
* Http协议基础知识
* xss与csrf
* 数据可视化: svg，canvas，d3.js，echarts.js，highcharts.js

经验
实习经验
公司、部门、岗位、参与项目、汇报对象、留用情况（若应届生，有无留用机会，为什么还出来看机会）、收获、总结

项目经验
目标/成果，团队协作情况，自身在团队的角色，自身工作对项目的帮助，遇到问题与解决思路、方案，收获、总结/复盘

作品/成果
自己开发软件/项目/作品成果，做过的研究，论文的发布，代码展示，专利申请

潜力
学习能力
好奇心、对新事物的接受度、思考深度、快速学习后解决问题的能力、举一反三

沟通协作
换位思考，表达能力，与他人/团队/跨团队的协作，矛盾的处理

解决问题能力
自觉地确定目的，并根据目的来支配、调节自己的行动，克服各种困难，从而实现目的

首页
搜索

64 天

平台概览 14
  - 卡片 2
  - 图表 3 * 4
应用列表 32
  - 应用列表 2
    - 创建应用 2
  - 应用详情
    - 应用配置 5
    - 活跃房间 5
    - 数据概览 8
    - 质量分析 10
房间列表 13
  - 房间列表 2
  - 详情 5
    - 音频 3
    - 视频 3
用量统计 5



性能优化
图片懒加载
请求预先加载
base64 本地
文件抽离
dns-prefetch

webpack打包 loader 
code split

打包
文件抽取 影响性能

dns

官网设计资源 https://lanhuapp.com/web/#/item?cid=&fid=all&tid=63281af8-3e93-4c88-9659-8d16668dc07d
https://cf.qiniu.io/pages/viewpage.action?pageId=39834528
https://cf.qiniu.io/pages/viewpage.action?pageId=39839187

var num = '10000000000000',
    reg = /(?=(\B)(\d{3})+$)/g;
 
//每三位加','号
console.log(num.replace(reg,','))
//10,000,000,000,000
 
//其他符号只需更改replace()第二个参数即可

11000...11015
10052 server unavailable
20001 deviceManager auto switch error
30001 websocket abort


关于错误异常的相关处理，都应在该回调中完成; 需要处理的错误码及建议处理逻辑如下:
           
【TOKEN 相关】
  1. QNRTCErrorTokenError [10001] 您提供的 token 出现了错误；
 关于 token 签算规则, 详情请参考【服务端开发说明.RoomToken 签发服务】https://doc.qnsdk.com/rtn/docs/server_overview#1    
  2. QNRTCErrorTokenExpired [10002] 您提供的 token 已过期, 需要生成可用的 token，再重新加入房间；
           
【房间设置相关】以下情况可以与您的业务服务开发确认下具体的设置
  1. QNRTCErrorRoomIsFull [10011] 当房间已加入人数超过每个房间的人数限制，请与后台服务确认该设置；
  2. QNRTCErrorUserAlreadyExist [10022] 后台如果配置为开启【禁止自动踢人】,则同一用户重复加入/未正常退出再加入，您的业务可根据实际情况选择配置；
  3. QNRTCErrorNoPermission [10051] 用户对于特定操作，如合流需要配置权限，禁止出现未授权的用户操作；
  4. QNRTCErrorRoomClosed [10003, 10005, 10012] 房间已被管理员关闭；
  

10006 你被踢出房间
  10021 用户不存在
  10031 发布的流不存在
  10032 发布的流的信息不匹配
  10033 发布的流已经存在
  10034 发布的流还未准备好
  10041 订阅的流已经存在
  10042 订阅的流信息不匹配
  10043 订阅的流已经存在
  10044 不能订阅自己
  10051 没有权限
  10052 服务器错误
           
【其他错误】
  1. QNRTCErrorAuthFailed 服务验证时出错，可能为服务网络异常。建议重新尝试加入房间；      
  2. QNRTCErrorPublishFailed 发布失败, 会有如下3种情况:
     1 ）请确认成功加入房间后，再执行发布操作
     2 ）请确定对于音频/视频 Track，分别最多只能有一路为 master
     3 ）请确认您的网络状况是否正常
            
  3. QNRTCErrorReconnectTokenError [10004] 内部重连后出错，一般出现在网络非常不稳定时出现，建议提示用户并尝试重新加入房间；
  4. QNRTCErrorInvalidParameter 服务交互参数错误，请在开发时注意合流、踢人动作等参数的设置。



switch (error.code) {
        case QNRTCErrorAuthFailed:
            NSLog(@"鉴权失败，请检查鉴权");
            break;
        case QNRTCErrorRoomIsFull:
            NSLog(@"房间人数已满");
            break;
        case QNRTCErrorTokenError:
            //关于 token 签算规则, 详情请参考【服务端开发说明.RoomToken 签发服务】https://doc.qnsdk.com/rtn/docs/server_overview#1   
            NSLog(@"roomToken 错误");
            break;
        case QNRTCErrorTokenExpired:
            NSLog(@"roomToken 过期");
            break;
        case QNRTCErrorUserAlreadyExist:
            NSLog(@"用户已存在");
            break;
        case QNRTCErrorNoPermission:
            NSLog(@"请检查用户是否有权限，如:合流");
            break;
        case QNRTCErrorReconnectTokenError:
            NSLog(@"重新进入房间超时，请务必调用 leaveRoom, 重新进入房间");
            break;
        case QNRTCErrorPublishFailed:
            NSLog(@"发布失败，请查看是否加入房间，并确定对于音频/视频 Track，分别最多只能有一路为 master");
            break;
        case QNRTCErrorInvalidParameter:
            NSLog(@"服务交互参数错误，请在开发时注意合流、踢人动作等参数的设置");
            break;
        case QNRTCErrorRoomClosed:
            NSLog(@"房间已被管理员关闭");
            break;
            
        default:
            break;
    }


react
1. vdom, 生命周期，HOC，PureComponent与Component，Diff，React
2. 调度, hooks, 生命周期, diff, server, context, ref, props, 
key, state, error, resource, reconciler, jsx, portal, hydrate,
root, lane, mutablesource, event
render, setState, forceUpdate, hydrate, createPortal

render阶段发请求？
提交阶段超时？
fiberlane 
setState：render -> commit 

ssr？


{
  LifeTime = 'lifetime',
  CarryOver = 'carryOver',
  Minimum = 'minimum'
}

type=国内HTTP全时段静态加速流量&capacity=500GB&settlement=lifetime
?shortName=TrustAsiaOVD3&years=2&limit=2&wildcardLimit=-1

scp -r /Users/zhuhao/projects/others/build/QNRTC-iOS zhuhao@10.20.34.27:/home/zhuhao/build
scp -r /Users/zhuhao/projects/others/build/QNRTC-iOS zhuhao@10.20.34.27:/home/zhuhao/build/QNRTC-iOS
/Users/zhuhao/tmp/QNRTC-Windows
qscp -r /home/zhuhao/build/QNRTC vdn-gddg-dls-1-5:/home/hermes/sdkdoc/env_prod/QNRTC

_dnsauth.static4.h5.gaoyong.co

scp -r /Users/zhuhao/projects/qiniu/rtndoc/rtn/website/build/QNRTC zhuhao@10.20.34.27:/home/zhuhao/build/QNRTC

curl 'http://localhost:8081/api/certificate/v1/domainsearch?from=0&size=10&currentCertFilter=true&currentCertId=&currentCertNames=*.qbox.net&certExpiredSort=desc&canDeployFilter=true' \
  -H 'Connection: keep-alive' \
  -H 'Pragma: no-cache' \
  -H 'Cache-Control: no-cache' \
  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36' \
  -H 'DNT: 1' \
  -H 'Accept: */*' \
  -H 'Sec-Fetch-Site: same-origin' \
  -H 'Sec-Fetch-Mode: cors' \
  -H 'Sec-Fetch-Dest: empty' \
  -H 'Referer: http://localhost:8081/certificate/complete/first/5ed8b5f8f9537d528e000014' \
  -H 'Accept-Language: zh-CN,zh;q=0.9,en;q=0.8' \
  -H 'Cookie: PORTAL_VERSION=v4; _ga=GA1.1.1957371576.1588939224; ADMIN_FUSION_SESSION=WkpYMldGU1VKNFVVSlpEN0hRUTFDR1MxNk1BS0UwSjIsMTU4OTc4NzEyOTI0ODUxOTcxMixmODE2NDI4NTZiM2ZlZDczNGEwZTZmMGNhNjI0YzE4NDZlNGM4MjZm; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%221380485361%22%2C%22%24device_id%22%3A%22171f428725aa32-07960d0a215915-30637d00-1296000-171f428725b93b%22%2C%22props%22%3A%7B%22%24latest_referrer%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_referrer_host%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_traffic_source_type%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_search_keyword%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%7D%2C%22first_id%22%3A%22171f428725aa32-07960d0a215915-30637d00-1296000-171f428725b93b%22%7D; io=iIiM6PfsmLd1WEIJAAAp; csrfToken=R4S0_ZzR4FmVzLrG1INurpII; Hm_lvt_204fcf6777f8efa834fe7c45a2336bf1=1591587648; PORTAL_SESSION=TzkyUU5aS1BIVVRYQUVaSkk4NjJKMkdCQUFOU1JLWUssMTU5MjIxMjYyNjE2NzI1MzMyOSw5ZDllYjljOGI1NzRhNGNmZDY4ZmEwYTNkMDg4MjMwZWJiODc2YmNm; _gid=GA1.1.1525597682.1592212592; Hm_lpvt_204fcf6777f8efa834fe7c45a2336bf1=1592297881' \
  --compressed

function Persion(name) {
  this.name = name
  console.log(this.name)
}

var a = Persion('aa')
console.log(a)
var b = new Persion('bb')
console.log(b)

class A {}
class B extends A {}

const a = new A()
const b = new B()

console.log(a)
console.log(b)
console.log(A.prototype)
console.log(B.prototype)

console.log(v1);
var v1 = 100;
function foo() {
    console.log(v1);
    //var v1 = 200;
    console.log(v1);
}
foo();
console.log(v1);


?shortName=TrustAsiaDVWildcardG5&years=1&wildcardLimit=1
SecureSite

var name = 'global';
var obj = {
    name: 'local',
    foo: function(){
        this.name = 'foo';
        console.log('obj foo:', this)
    }.bind(window)
};
var bar = obj.foo();
setTimeout(function() {
    console.log(window.name);
}, 0);
console.log(bar.name);
  
var bar3 = bar2 = bar;
bar2.name = 'foo2';
console.log(bar3.name);

setTimeout(() => console.log('a'));
Promise.resolve().then(
  () => console.log('b')
).then(
  () => Promise.resolve('c').then(
    (data) => {
      setTimeout(() => console.log('d'));
      console.log('f');
      return data;
    }
  )
).then(data => console.log(data));


var m= 1, j = k = 0; 
    function add(n) { 
      console.log(n)
        return n = n+1; 
　 } 
    y = add(m); 
    console.log(y)
    function add(n) { 
      console.log(n)
        return n = n + 3; 
    } 
z = add(m); 
console.log(y,z)

dig _dnsauth.testxuzhuozz2.support2technical.me TXT

curl 'http://localhost:8081/api/certificate/v1/ssl/verifyhost?domain=_dnsauth.a.com&method=DNS&value=202006290629225qm1yl5nek8kxvrnm85ci8stx6s8eeopwio0a62vtxksg6ria899' \
  -H 'Connection: keep-alive' \
  -H 'Pragma: no-cache' \
  -H 'Cache-Control: no-cache' \
  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36' \
  -H 'DNT: 1' \
  -H 'Accept: */*' \
  -H 'Sec-Fetch-Site: same-origin' \
  -H 'Sec-Fetch-Mode: cors' \
  -H 'Sec-Fetch-Dest: empty' \
  -H 'Referer: http://localhost:8081/certificate/ssl/detail/5e575820f9537d7b62000168/order' \
  -H 'Accept-Language: zh-CN,zh;q=0.9,en;q=0.8' \
  -H 'Cookie: PORTAL_VERSION=v4; _ga=GA1.1.1957371576.1588939224; ADMIN_FUSION_SESSION=WkpYMldGU1VKNFVVSlpEN0hRUTFDR1MxNk1BS0UwSjIsMTU4OTc4NzEyOTI0ODUxOTcxMixmODE2NDI4NTZiM2ZlZDczNGEwZTZmMGNhNjI0YzE4NDZlNGM4MjZm; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%221380485361%22%2C%22%24device_id%22%3A%22171f428725aa32-07960d0a215915-30637d00-1296000-171f428725b93b%22%2C%22props%22%3A%7B%22%24latest_referrer%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_referrer_host%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_traffic_source_type%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%2C%22%24latest_search_keyword%22%3A%22url%E7%9A%84domain%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%22%7D%2C%22first_id%22%3A%22171f428725aa32-07960d0a215915-30637d00-1296000-171f428725b93b%22%7D; io=iIiM6PfsmLd1WEIJAAAp; csrfToken=R4S0_ZzR4FmVzLrG1INurpII; Hm_lvt_204fcf6777f8efa834fe7c45a2336bf1=1591587648,1592464253,1593309449; PORTAL_SESSION=VUFXVVdCVEo1S1dNTjVCUkdONlIwNTFBOVpDODAyVUQsMTU5MzQ4NTc2OTkwMTA0MjIwOCxlOTNlNmMxYjQyMWNiNDg3YTI3MDU0YjllZDdlN2U2YWM1M2Y3NWU5; Hm_lpvt_204fcf6777f8efa834fe7c45a2336bf1=1593580433' \
  --compressed


  curl 'http://portalv4.dev.qiniu.io/api/certificate/v1/ssl/verifyhost?domain=_dnsauth.testxuzhuozz4.support2technical.me&method=DNS&value=2020070109280651t4lvwgq1go2q9lwdopcuypo1uthdqu0mesmtw815s4cqu5ja' \
  -H 'Connection: keep-alive' \
  -H 'Pragma: no-cache' \
  -H 'Cache-Control: no-cache' \
  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36' \
  -H 'DNT: 1' \
  -H 'Accept: */*' \
  -H 'Referer: http://portalv4.dev.qiniu.io/certificate/ssl/detail/5eba7421242b807c34000002/order' \
  -H 'Accept-Language: zh-CN,zh;q=0.9,en;q=0.8' \
  -H 'Cookie: _ga=GA1.2.1291642383.1588990335; gr_user_id=e0a950f3-8955-41e9-98e8-0146bf021f19; PORTAL_VERSION=v4; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%221380485361%22%2C%22%24device_id%22%3A%22171f9081ce57d5-0dbf588c113254-30637d00-1296000-171f9081ce6857%22%2C%22props%22%3A%7B%22%24latest_referrer%22%3A%22%22%2C%22%24latest_referrer_host%22%3A%22%22%2C%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%7D%2C%22first_id%22%3A%22171f9081ce57d5-0dbf588c113254-30637d00-1296000-171f9081ce6857%22%7D; Hm_lvt_204fcf6777f8efa834fe7c45a2336bf1=1591857250; grwng_uid=0368bc5e-a83e-4f15-a27e-f1a000eb11f7; SSID=VEdRUEtDR0NSMVUwSUo1TThDMTVVQkg2MVZRTTVHQ0EyUFVSTSwxNTkzMzA5NTI3MjkwMzk5NjcyLDlmZGU1N2M2OWNkODBiYmFhMDJiMGY0YjBhODMwNGVhZjIwOTQ2MzZiNzk2ODk0MzRiNDE0OTllOGRmNDI1ZTM5NDk1ZjJiYzQwOTRlZTQ1NzJiYTkwODlhMDQwM2M1YzE2OTQ0ZDgwMjZjNWJjZTY2MjZlNzExYTY2MGFiYWIz; PORTAL_UID=1380485361; PORTAL_SESSION=SjVLMzNYOFBRSVdFV1JHVDk2U1NTQUhXQkgwRzdIWlgsMTU5MzY3OTQxNTc3MzY2MDY2NywxYWRkZDZmZmIyYTIwZDJmYjEyN2I3Y2M0N2IyNGI4OTU4NjQ4MjQ0; _gid=GA1.2.18247825.1593679416; _gat=1; Hm_lpvt_204fcf6777f8efa834fe7c45a2336bf1=1593684579' \
  --compressed \
  --insecure

  Web 前端开发工程师（音视频方向）

岗位职责

参与 Web 前端音视频 SDK 的设计与开发
参与小程序音视频 SDK 的设计与开发
任职要求

擅长 HTML，CSS，JavaScript 等 Web 前端技术
熟悉 npm/yarn/lerna 等 Node.js 包管理工具，熟悉 Webpack/gulp 等打包工具的使用，熟练使用 React，熟悉 react 生态系统
熟悉微信小程序的开发
了解后端开发语言，熟悉 Node.js，Golang 等语言
熟悉 TCP/IP，HTTP, WebSocket，HTTPS 协议并了解 RESTful 规范
良好的数据结构和算法基础, 良好的工程素养以及关于 Paper, IETF RFC 与 Open Source 的基本阅读与理解能力
拥有良好的编码习惯, 热爱多媒体研发工作, 喜欢创新挑战, 自我驱动能力强, 具备良好的沟通能力和团队协作精神
加分项

具备音视频、流媒体、小程序相关产品和项目开发经验
了解 h5 播放器相关知识
了解音视频、流媒体基础知识，了解 H.264、AAC、MP3、FLV、MP4 等常用编码与容器格式
具备大型工程实践或开源软件（例如 FFmpeg）等应用经验

puppeteer
我是一个热爱生活，爱好广泛的人。平时有空就会去健身房健身、跑步，也经常去参加各种活动。同时我也是个有计划，懂自律的人。在工作学习以及生活中，我都有合理的计划，会扮演好各个角色。

负责cdn、证书业务的相关的系统（主要是面向客户的portal和面向内部运维和技术支持的admin）的前端开发维护。
负责连麦（webrtc）业务的h5 sdk和小程序 sdk，以及牛会议（使用七牛连麦 sdk的视频会议demo）的开发维护。

七牛连麦h5和小程序sdk
H5 sdk使用typescript语言开发，采用jest、puppeteer进行自动化测试，通过事件的方式联通业务逻辑和底层逻辑，收集并上报错误异常，实时监控服务质量。对应的会议demo牛会议采用React框架进行开发，部署在七牛云容器平台上。
小程序sdk对微信的live-player、live-pusher进行了封装，自动进行网络异常处理，错误重试。

七牛新官网改版
官网使用 Next.js 框架，导出静态站点部署到公有云存储中，使用CDN加速优化资源加载，采用镜像回源的方式兼容老站点。

七牛CDN以及证书的portal系统
portal 系统采用 react 框架，数据管理使用 mobx，表单使用 formstate，组件库使用 react-icecream（基于 antd 组件库）。


深度思考、化繁为简、脚踏实地、仰望星空

h5 sdk使用 typescript 语言开发，采用 jest、puppeteer 进行自动化测试，通过事件的方式联通业务逻辑和底层逻辑，收集并上报错误异常，实时监控服务质量。对应的会议demo牛会议采用 React 框架进行开发，部署在七牛云容器平台上。
小程序 sdk 对微信的 live-player、live-pusher 进行了封装，自动进行网络异常处理，错误重试。

七牛新官网改版


负责带娃去哪儿、摄影频道、vip 权益日、会员等级等栏目的h5开发维护。
负责七夕活动的h5、小程序的开发。
负责男神女神微信增粉活动的微信公众号开发。
负责手机QQ的大众点评轻应用开发。
参与数据中台开发。

负责商家端和平台端的客服聊天系统前端部分（适配移动端的h5）的开发维护。
负责商家平台和运营平台中客服模块前端的开发维护。

客服聊天系统



负责cdn、证书业务的相关的系统（主要是面向客户的portal和面向内部运维和技术支持的admin）的前端开发维护。
负责连麦（webrtc）业务的h5 sdk和小程序 sdk，以及牛会议（使用七牛连麦 sdk的视频会议demo）的开发维护。
部分项目经验：
portal 系统中，七牛CDN、证书等业务模块
负责 CDN、证书等业务模块的开发和维护。
使用 React 框架 typescript 语言开发，采用 fec-builder 进行构建，采用 mobx 管理前端状态，组件库使用 react-icecream（基于 antd），表单库使用 formstate。
七牛新官网改版
负责新官网的首页和公司介绍页的开发。负责的其他内容有
公共模块：顶部通知栏、底部导航。
业务组件：文档链接、客户案例、接入流程
产品页：CDN、CDN OEM、SSL 证书、智能多媒体、实时音视频、直播
使用 Next.js 框架，适配移动端，导出静态站点部署到公有云存储中，使用CDN加速优化资源加载，采用镜像回源的方式兼容老站点。
七牛连麦 sdk
负责 h5 sdk 和小程序 sdk 以及对应demo 牛会议的开发维护。
h5 sdk使用 typescript 语言开发，采用 jest、puppeteer 进行自动化测试，通过事件的方式联通业务逻辑和底层逻辑，收集并上报错误异常，实时监控服务质量。对应的会议demo牛会议采用 React 框架进行开发，部署在七牛云容器平台上。
小程序 sdk 对微信的 live-player、live-pusher 进行了封装，自动进行网络异常处理，错误重试。


负责带娃去哪儿、摄影频道、vip 权益日、会员等级等栏目的 h5 开发维护。
负责七夕活动的h5、小程序的开发。
参与数据中台开发。
负责男神女神微信增粉活动的微信公众号开发。
负责手机QQ的大众点评轻应用开发。
部分项目经验：
会员等级
负责滚动定位组件、滑动组件以及相应的模块的开发。
项目内嵌在大众点评 app 中，使用 hybrid 的开发方式，支持生成图片，支持分享到各个平台。
七夕活动
负责答题模版和答题结果模块的小程序和 h5 开发。
采用构建站点的技术，文案、细节动态可配置。
带娃去哪儿
负责整体开发。
使用地图组件，基于地理位置信息进行商家展示，带有下拉二楼的形式展示个人信息。
数据中台面
负责大多数基础图表模版和归因模型的开发。
基于 react、echarts 框架。支持图表模版功能（包含基础图表、漏斗、归因模型这几类），可以使用模版添加、配置图表；支持自定义图表的展示位置和布局。对图表的展示进行了一定的性能优化，满足展示大量图表的场景
大众点评轻应用
负责大众点评美食轻应用的开发和维护，项目基于手机 QQ 轻应用框架，使用 lua 开发，其中的缓动效果都自己实现。



负责商家端和平台端的客服聊天系统前端部分（适配移动端的 h5）的开发维护。
负责商家平台和运营平台中客服模块前端的开发维护。
部分项目经验：
客服聊天系统
负责 h5 端的开发，使用 ionic 框架，适配移动端，通过 websocket 与后端同步数据
商家平台中客服相关模块
负责客服相关的模块，使用 react 框架开发，使用 webpack、babel 编译打包

亚信dv通配符
?shortName=TrustAsiaDVWildcardG5&wildcardLimit=1&years=1
geotrust ov通配符
?shortName=TrueBizIDWildcard&wildcardLimit=1&years=1
geotrust ov
?shortName=TrueBizID&limit=1&years=1
digicert ev
?shortName=SecureSiteEV&limit=1&years=2


verify host args: struct { Domain string "param:\"domain\""; Path string "param:\"path\""; Value string "param:\"value\""; Method string "param:\"method\"" }{Domain:"_dnsauth.bb.qbox.net", Path:"", Value:"2020070907250661rckkxiscssyovcmb99x0k3y9j3h0cca1qxnjbmtx6cvlaske", Method:"DNS"}

张震

react
了解 hooks、生命周期
vdom 不太熟悉

常家鑫：熟悉 react 的常规使用方式；熟悉 cors 跨域的处理方式；英文达到 cet 6，熟练阅读外文资料


问题1: 得物、爱库存、趣头条offer在价格差不多的时候怎么选择？
问题2: 自己想造轮子，怎么说服leader?
问题3: 在普通的公司怎么有效沉淀技术?


卢宏轩
英语水平出色大二一次过cet6，基础较好，学习能力较强
基本了解选择器优先级，页面渲染基本流程
了解let,var的区别，不了解微任务、宏任务
不了解vue和react，之前都用原生js操作dom
了解git，不太熟悉npm
了解cookie，localstorage，不熟悉跨域
了解http，不熟悉性能优化
做的项目能跑通，但是技术栈比较老旧（未用框架，原生js，用html比较多）
候选人有对前端很有热情，数学（考研128）、英语、计算机基础（考研111）能力很强，比较踏实可靠，但学习前端的时间太短，还处于前端基础学习的阶段，不适合干活

react
了解 hooks、生命周期
vdom 不太熟悉

常家鑫：
英文达到 cet 6，熟练阅读外文资料；
熟悉事件循环知道微事件、宏事件；
熟悉 react 的常规使用方式，了解jsx、生命周期、hooks，但是不了解 diff 的流程，vdom 的细节，使用过 redux，关注 graphql；
熟悉 cors 跨域的处理方式，了解 access-control-* 等几个头，但是不了解简单请求和复杂请求，只是在 express 插件中配置过，了解过 jsonp，不熟悉其中的细节；
熟悉 webpack 的使用，了解其中 loader 和 plugin 的概念；
性能优化和 http 基础知识方面有初步的了解
总体来说候选人在前端开发的多个方向都有涉猎，能进行基础的开发工作，英文水平和学习能力较强，但可能接触时间短，各个方面了解不深入


